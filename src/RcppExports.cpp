// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// segment_constraint
IntegerVector segment_constraint(NumericVector x, NumericVector y, List segment);
RcppExport SEXP _laridae_segment_constraint(SEXP xSEXP, SEXP ySEXP, SEXP segmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< List >::type segment(segmentSEXP);
    rcpp_result_gen = Rcpp::wrap(segment_constraint(x, y, segment));
    return rcpp_result_gen;
END_RCPP
}
// poly_triangulation0
IntegerVector poly_triangulation0();
RcppExport SEXP _laridae_poly_triangulation0() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(poly_triangulation0());
    return rcpp_result_gen;
END_RCPP
}
// poly_triangulation_xy
IntegerVector poly_triangulation_xy(NumericVector x, NumericVector y);
RcppExport SEXP _laridae_poly_triangulation_xy(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(poly_triangulation_xy(x, y));
    return rcpp_result_gen;
END_RCPP
}
// poly_triangulation_xylist
IntegerVector poly_triangulation_xylist(List xx, List yy, LogicalVector mark);
RcppExport SEXP _laridae_poly_triangulation_xylist(SEXP xxSEXP, SEXP yySEXP, SEXP markSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type xx(xxSEXP);
    Rcpp::traits::input_parameter< List >::type yy(yySEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type mark(markSEXP);
    rcpp_result_gen = Rcpp::wrap(poly_triangulation_xylist(xx, yy, mark));
    return rcpp_result_gen;
END_RCPP
}
// tri_xy
IntegerVector tri_xy(NumericVector x, NumericVector y);
RcppExport SEXP _laridae_tri_xy(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(tri_xy(x, y));
    return rcpp_result_gen;
END_RCPP
}
// tri_xy1
IntegerVector tri_xy1(NumericVector x, NumericVector y);
RcppExport SEXP _laridae_tri_xy1(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(tri_xy1(x, y));
    return rcpp_result_gen;
END_RCPP
}
// tri_xy2
IntegerVector tri_xy2(NumericVector x, NumericVector y);
RcppExport SEXP _laridae_tri_xy2(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(tri_xy2(x, y));
    return rcpp_result_gen;
END_RCPP
}
